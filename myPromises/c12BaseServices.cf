# vim:syntax=cf3
#
# TODO ensure permissions

bundle agent c12_base_services
{
    vars:
        secondpass::
            "service" slist => getindices("$(base_services)");

        fedora_19::
            "base_services[postfix][id]"      string => "postfix";
            "base_services[postfix][package]" string => "postfix";
            "base_services[postfix][conf]"    string => "/etc/postfix/main.cf";

            "base_services[ntp][id]"      string => "ntpd";
            "base_services[ntp][package]" string => "ntp";
            "base_services[ntp][conf]"    string => "/etc/ntp.conf";

            "base_services[ssh][id]"      string => "sshd";
            "base_services[ssh][package]" string => "openssh-server";
            "base_services[ssh][conf]"    string => "/etc/ssh/sshd_config";

    classes:
        "secondpass" expression => isvariable("base_services");

    files:
        "$(base_services[$(service)][conf])"
               depends_on => { "files_setup" },
            edit_defaults => empty,
                  changes => diff,
            edit_template => "$(global_vars.templates_dir)/$(sys.flavor)/$(base_services[$(service)][conf])",
                  classes => if_repaired("base_services_fixed_$(service)");

    packages:
        "$(base_services[$(service)][package])"
                   comment => "Ensure $(service) is installed",
                    handle => "c11_setup_$(service)_package",
            package_policy => "add",
            package_method => yum_rpm;

    services:
        any::
            "$(base_services[$(service)][id])"
                   comment => "Restart a service if we've messed with the config file",
                depends_on => { "c11_setup_$(service)_package", "base_services_starting_$(service)" },
            service_policy => "restart",
            service_method => custom_service,
                ifvarclass => "base_services_fixed_$(service)";

    reports:
        verbose_mode::
            "Making sure common services are running and configured";

        inform_mode::
            "$(service): Package=$(base_services[$(service)][package])";
}
